name: Build Windows EXE v2.0 - Complete Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas pandas_access pyinstaller
        
    - name: Install mdbtools-win (for testing)
      run: |
        # Download and extract mdbtools for testing in CI environment
        $mdbtoolsUrl = "https://github.com/mdbtools/mdbtools/releases/download/v0.9.3/mdbtools-win-x64-0.9.3.zip"
        $outputFile = "mdbtools.zip"
        
        Write-Host "Downloading mdbtools..."
        Invoke-WebRequest -Uri $mdbtoolsUrl -OutFile $outputFile
        
        Write-Host "Extracting mdbtools..."
        Expand-Archive -Path $outputFile -DestinationPath "mdbtools-temp"
        
        # Add to PATH for testing
        $mdbtoolsPath = (Resolve-Path "mdbtools-temp").Path
        echo "mdbtools_path=$mdbtoolsPath" >> $env:GITHUB_ENV
        echo "$mdbtoolsPath" >> $env:GITHUB_PATH
        
    - name: Test MDB functionality
      run: |
        Write-Host "Testing MDB support..."
        python -c "
        try:
            import pandas_access as mdb
            print('‚úÖ pandas_access imported successfully')
            
            # Test basic functionality
            import tempfile, os
            print('‚úÖ MDB basic test passed')
        except Exception as e:
            print(f'‚ùå MDB test failed: {e}')
            exit(1)
        "
        
    - name: Build EXE with proper metadata
      run: |
        Write-Host "Building SMS Notification Clients v2.0..."
        
        # Create version info file for Windows metadata
        $versionInfo = @"
# UTF-8
VSVersionInfo(
  ffi=FixedFileInfo(
    filevers=(2, 0, 0, 0),
    prodvers=(2, 0, 0, 0),
    mask=0x3f,
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
  ),
  kids=[
    StringFileInfo(
      [
        StringTable(
          u'040904B0',
          [StringStruct(u'CompanyName', u'Kasi Extractor'),
           StringStruct(u'FileDescription', u'SMS Notification Clients v2.0 - MDB and CSV Extractor'),
           StringStruct(u'FileVersion', u'2.0.0.0'),
           StringStruct(u'InternalName', u'SMS_Notification_Clients'),
           StringStruct(u'LegalCopyright', u'Open Source'),
           StringStruct(u'OriginalFilename', u'SMS_Notification_Clients_v2.0.exe'),
           StringStruct(u'ProductName', u'SMS Notification Clients'),
           StringStruct(u'ProductVersion', u'2.0.0.0')])
      ]
    ),
    VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
  ]
)
"@
        
        Set-Content -Path "version_info.txt" -Value $versionInfo
        
        pyinstaller --onefile --windowed `
          --name="SMS_Notification_Clients_v2.0" `
          --version-file=version_info.txt `
          --add-data="README.md;." `
          --exclude-module=pytest `
          --exclude-module=unittest `
          --hidden-import=pandas_access `
          --hidden-import=tkinter `
          sms_notification_clients.py
        
    - name: Verify EXE creation and test basic functionality
      run: |
        $exeFile = "dist/SMS_Notification_Clients_v2.0.exe"
        
        if (Test-Path $exeFile) {
          $exe = Get-Item $exeFile
          Write-Host "‚úÖ EXE created successfully:"
          Write-Host "  File: $($exe.Name)"
          Write-Host "  Size: $([math]::Round($exe.Length / 1MB, 2)) MB"
          Write-Host "  Created: $($exe.LastWriteTime)"
          
          # Test that EXE can start without errors
          Write-Host "Testing EXE startup..."
          $process = Start-Process -FilePath $exeFile -ArgumentList "--help" -PassThru -NoNewWindow -Wait
          if ($process.ExitCode -eq 0) {
            Write-Host "‚úÖ EXE starts successfully"
          } else {
            Write-Warning "EXE startup test failed, but continuing build"
          }
        } else {
          Write-Error "‚ùå EXE file was not created!"
          Get-ChildItem -Path "dist" -ErrorAction SilentlyContinue | Format-Table
          exit 1
        }
        
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: SMS_Notification_Clients_v2_Windows
        path: dist/SMS_Notification_Clients_v2.0.exe
        retention-days: 90
        
    - name: Create Release with detailed instructions
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/SMS_Notification_Clients_v2.0.exe
        name: "SMS Notification Clients v2.0"
        body: |
          ## üìã SMS Notification Clients v2.0
          
          ### ‚ú® Features
          - ‚úÖ Direct CSV file processing
          - ‚úÖ MDB file support (via mdbtools)
          - ‚úÖ Windows compatible standalone executable
          - ‚úÖ Bulgarian text encoding support
          - ‚úÖ Modern GUI interface
          
          ### üöÄ Usage
          1. Download the .exe file
          2. Run directly on Windows 10/11
          3. No installation required
          
          ### üìä MDB Support Requirements
          For full MDB file support, install mdbtools:
          
          **Option 1: Automatic setup**
          ```bash
          # Download from official release:
          # https://github.com/mdbtools/mdbtools/releases
          ```
          
          **Option 2: Manual installation**
          1. Download mdbtools-win binaries
          2. Extract to `C:\mdbtools\`
          3. Add `C:\mdbtools\bin` to your system PATH
          4. Restart the application
          
          ### üì¶ Technical Details
          - **File size:** ~80-120MB (includes Python 3.10 + pandas)
          - **Architecture:** Windows x64
          - **Dependencies:** Built-in (no external Python required)
          
          ### üîß Troubleshooting
          If MDB files don't work:
          1. Verify mdbtools are in PATH: Open CMD and type `mdb-ver`
          2. Restart the application after installing mdbtools
          3. Ensure MDB files are not password protected
          
          ### üìù Note for CSV Files
          CSV files work immediately without any additional setup!
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}