name: Build Windows EXE v2.0

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas pyinstaller
        
    - name: Try install pandas_access (optional)
      run: |
        pip install pandas_access
      continue-on-error: true
        
    - name: List Python files
      run: |
        Write-Host "Available Python files:"
        Get-ChildItem -Filter "*.py" | Format-Table Name, Length
        
    - name: Build EXE with mdbtools-win
      run: |
        Write-Host "Building EXE with embedded mdbtools-win..."
        pyinstaller --onefile --windowed --name="SMS_Notification_Clients_v2.0" --add-binary="C:\mdbtools\mdb-tables.exe;mdbtools" --add-binary="C:\mdbtools\mdb-export.exe;mdbtools" --exclude-module=pytest --exclude-module=unittest sms_notification_clients.py
        
    - name: Verify EXE creation
      run: |
        Write-Host "Checking for created EXE files..."
        
        # Търсим основния файл
        $mainExe = "dist/SMS_Notification_Clients_v2.0.exe"
        $fallbackExe = "dist/SMS_Notification_Clients_v2.0_Fallback.exe"
        
        $exeFound = $false
        $exeFile = $null
        
        if (Test-Path $mainExe) {
          $exeFile = Get-Item $mainExe
          $exeFound = $true
          Write-Host "Main EXE created successfully"
        } elseif (Test-Path $fallbackExe) {
          $exeFile = Get-Item $fallbackExe
          $exeFound = $true
          Write-Host "Fallback EXE created successfully"
        }
        
        if ($exeFound) {
          Write-Host "Success! EXE created:"
          Write-Host "  File: $($exeFile.Name)"
          Write-Host "  Size: $([math]::Round($exeFile.Length / 1MB, 2)) MB"
          Write-Host "  Path: $($exeFile.FullName)"
          
          # Копираме като стандартно име за upload
          if ($exeFile.Name -ne "SMS_Notification_Clients_v2.0.exe") {
            Copy-Item $exeFile.FullName "dist/SMS_Notification_Clients_v2.0.exe"
            Write-Host "Copied to standard name for upload"
          }
        } else {
          Write-Error "No EXE file was created!"
          Write-Host "Contents of dist folder:"
          if (Test-Path "dist") {
            Get-ChildItem -Path "dist" | Format-Table
          } else {
            Write-Host "dist folder does not exist"
          }
          
          Write-Host "Checking for any .exe files in current directory:"
          Get-ChildItem -Filter "*.exe" -Recurse | Format-Table FullName, Length
          exit 1
        }
        
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: SMS_Notification_Clients_v2_Windows
        path: dist/SMS_Notification_Clients_v2.0.exe
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/SMS_Notification_Clients_v2.0.exe
        name: "SMS Notification Clients v2.0"
        body: |
          ## SMS Notification Clients v2.0
          
          ### Features
          - CSV file support (direct processing)
          - Optional MDB to CSV conversion
          - Windows compatible (no external dependencies)
          - Bulgarian text encoding support
          
          ### Usage
          1. Download the .exe file
          2. Run directly on Windows 10/11
          3. No installation required
          
          File size: ~50-100MB
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}